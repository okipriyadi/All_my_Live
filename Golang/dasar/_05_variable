String
========
var	lastName string				//deklarsasi
lastName = "wick"				//assignment

var	firstName string = "john"  //deklarasi + assignment
fmt.Printf("halo	%s	%s!\n",	firstName,	lastName)


Tipe	Data	 	bool	 	(Boolean)
===========================================
var	exist	bool	=	true
fmt.Printf("exist?	%t	\n",	exist)


Integer (Non Desimal)
========
var	positiveNumber	uint8	=	89
var	negativeNumber	=	-1243423644
fmt.Printf("bilangan	positif:	%d\n",	positiveNumber)
fmt.Printf("bilangan	negatif:	%d\n",	negativeNumber)

Tipe	data
Cakupan	bilangan
	uint8	 0	↔	255
	uint16	 0	↔	65535
	uint32	 0	↔	4294967295
	uint64	 0	↔	18446744073709551615
	uint	 sama	dengan	 	uint32	 	atau	 	uint64	 	(tergantung	nilai)
	byte	 sama	dengan	 	uint8	
	int8	 -128	↔	127
	int16	 -32768	↔	32767
	int32	 -2147483648	↔	2147483647
	int64	 -9223372036854775808	↔	9223372036854775807
	int	 sama	dengan	 	int32	 	atau	 	int64	 	(tergantung	nilai)
	rune	 sama	dengan	 	int32	

floating (Desimal)
====================
var	decimalNumber	=	2.62
fmt.Printf("bilangan	desimal:	%f\n",	decimalNumber)
fmt.Printf("bilangan	desimal:	%.3f\n",	decimalNumber)



Deklarasi	Variabel	Tanpa	Tipe	Data
==============================================
Selain	manifest	typing,	Golang	juga	mengadopsi	metode	type	inference,	yaitu	metode
deklarasi	variabel	yang	tipe	data-nya	ditentukan	oleh	tipe	data	nilainya,	kontradiktif	jika
dibandingkan	dengan	cara	pertama.	Dengan	metode	jenis	ini,	keyword	 	var	 	dan	tipe	data
tidak	perlu	ditulis.	Agar	lebih	jelas,	silakan	perhatikan	kode	berikut.


lastName	:=	"wick"

Tanda	 	:=	 	hanya	digunakan	sekali	di	awal	pada	saat	deklarasi	saja.	Setelah	itu,	untuk
assignment	nilai	selanjutnya	harus	menggunakan	tanda	 	=	 .	Contoh:

lastName	:=	"wick"
lastName	=	"ethan"
lastName	=	"bourne"


Deklarasi	Multi	Variabel
==============================
var	first,	second,	third	string
first,	second,	third	=	"satu",	"dua",	"tiga"

var	fourth,	fifth,	sixth	string	=	"empat",	"lima",	"enam"


Variabel	Underscore	 	_	
==============================
Golang	memiliki	aturan	unik	yang	tidak	dimiliki	bahasa	lain,	yaitu	tidak	boleh	ada	satupun
variabel	yang	menganggur.	Artinya,	semua	variabel	yang	dideklarasikan	harus	digunakan.
Jika	ada	variabel	yang	tidak	digunakan	tapi	dideklarasikan,	program	akan	gagal	dikompilasi.


Deklarasi	Variabel	Menggunakan	Keyword	 	new	
=====================================================
Keyword	 	new	 	digunakan	untuk	mencetak	data	pointer	dengan	tipe	data	tertentu.	Nilai	data
default-nya	akan	menyesuaikan	tipe	datanya.	Contoh	penerapannya:

name	:=	new(string)
fmt.Println(name)			//	0x20818a220
fmt.Println(*name)			//	""


Variabel	 	name	 	menampung	data	bertipe	pointer	string.	Jika	ditampilkan	yang	muncul
bukanlah	nilainya	melainkan	alamat	memori	nilai	tersebut	(dalam	bentuk	notasi
heksadesimal).	Untuk	menampilkan	nilai	aslinya,	variabel	tersebut	perlu	di-dereference
terlebih	dahulu,	menggunakan	tanda	asterisk	( 	*	 ).
Mungkin	untuk	sekarang	banyak	yang	akan	bingung,	namun	tak	apa,	karena	nantinya	di
bab	22	akan	dikupas	habis	tentang	apa	itu	pointer	dan	dereference.


Deklarasi	Variabel	Menggunakan	Keyword make
=================================================
Keyword	ini	hanya	bisa	digunakan	untuk	pembuatan	beberapa	jenis	variabel	saja,	yaitu:
- channel
- slice
- map

Penggunaan	Konstanta
==========================
const	firstName	string	=	"john"
fmt.Print("halo	",	firstName,	"!\n")

